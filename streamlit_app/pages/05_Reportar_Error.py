"""
HU05: Reportar Errores o Inconsistencias
"""
import streamlit as st
import requests
import os
from datetime import datetime

st.set_page_config(page_title="Reportar Error", page_icon="üìù", layout="wide")

FASTAPI_URL = os.getenv("FASTAPI_URL", "http://localhost:8000")
API_REPORTES = f"{FASTAPI_URL}/api/v1/reportes/crear"

st.title("üìù Reportar Error o Inconsistencia")
st.markdown("Ay√∫danos a mejorar la calidad de los datos reportando errores o inconsistencias")

# Informaci√≥n
st.info("""
üîç **¬øEncontraste un error?**

Si detectaste alguna inconsistencia en los datos, informaci√≥n incorrecta o 
cualquier problema con el sistema, por favor rep√≥rtalo usando este formulario.
""")

st.divider()

# Formulario de reporte
st.subheader("üìã Formulario de Reporte")

with st.form("form_reporte"):
    # Datos del reportante
    col1, col2 = st.columns(2)
    
    with col1:
        nombre = st.text_input(
            "Nombre Completo (Opcional)",
            placeholder="Ej: Juan P√©rez",
            help="Tu nombre completo (opcional)",
            key="nombre_input"
        )
    
    with col2:
        email = st.text_input(
            "Correo Electr√≥nico (Opcional)",
            placeholder="ejemplo@email.com",
            help="Email para contactarte si es necesario (opcional)",
            key="email_input"
        )
    
    # Tipo de error
    tipo_error = st.selectbox(
        "Tipo de Error *",
        options=[
            "",
            "Informaci√≥n Incorrecta",
            "Dato Faltante",
            "Error de Sistema",
            "Inconsistencia en Datos",
            "Problema de Visualizaci√≥n",
            "Otro"
        ],
        help="Selecciona el tipo de error encontrado",
        key="tipo_error_input"
    )
    
    # N√∫mero de radicado (opcional)
    numero_radicado = st.text_input(
        "N√∫mero de Radicado (Opcional)",
        placeholder="Ej: 20230001234",
        help="Si el error est√° relacionado con un tr√°mite espec√≠fico, indica su n√∫mero de radicado",
        key="numero_radicado_input"
    )
    
    # Descripci√≥n
    descripcion = st.text_area(
        "Descripci√≥n del Error *",
        placeholder="Describe detalladamente el error encontrado...",
        help="Proporciona todos los detalles posibles sobre el error",
        height=150,
        key="descripcion_input"
    )
    
    st.markdown("---")
    st.caption("Los campos marcados con * son obligatorios")
    
    # Bot√≥n de env√≠o
    submitted = st.form_submit_button(
        "üì® Enviar Reporte",
        use_container_width=True,
        type="primary"
    )

# Procesar env√≠o
if submitted:
    # Validaciones
    errores = []
    
    # Validar nombre solo si se proporciona
    if nombre and len(nombre) < 2:
        errores.append("El nombre debe tener al menos 2 caracteres")
    
    # Validar email solo si se proporciona
    if email and ("@" not in email or "." not in email):
        errores.append("Ingresa un correo electr√≥nico v√°lido")
    
    if not tipo_error:
        errores.append("Selecciona un tipo de error")
    
    if not descripcion or len(descripcion) < 10:
        errores.append("La descripci√≥n debe tener al menos 10 caracteres")
    
    if len(descripcion) > 1000:
        errores.append("La descripci√≥n no debe exceder 1000 caracteres")
    
    # Mostrar errores o enviar
    if errores:
        st.error("‚ö†Ô∏è Por favor corrige los siguientes errores:")
        for error in errores:
            st.error(f"- {error}")
    else:
        with st.spinner("Enviando reporte..."):
            try:
                payload = {
                    "nombre": nombre,
                    "email": email,
                    "tipo_error": tipo_error,
                    "descripcion": descripcion,
                    "numero_radicado": numero_radicado if numero_radicado else None
                }
                
                response = requests.post(API_REPORTES, json=payload)
                response.raise_for_status()
                
                resultado = response.json()
                
                if resultado.get("success"):
                    st.success("‚úÖ ¬°Reporte enviado exitosamente!")
                    st.info(f"üìã ID del Reporte: **{resultado.get('reporte_id')}**")
                    st.balloons()
                    
                    # Mostrar resumen
                    with st.expander("üìÑ Resumen del Reporte"):
                        st.write(f"**Nombre:** {nombre if nombre else 'No proporcionado'}")
                        st.write(f"**Email:** {email if email else 'No proporcionado'}")
                        st.write(f"**Tipo:** {tipo_error}")
                        if numero_radicado:
                            st.write(f"**Radicado:** {numero_radicado}")
                        st.write(f"**Descripci√≥n:** {descripcion}")
                        st.write(f"**Fecha:** {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
                    
                    st.info("""
                    üì¨ **¬øQu√© sigue?**
                    
                    - Tu reporte ha sido registrado con √©xito
                    - El equipo revisar√° la informaci√≥n proporcionada
                    - Si es necesario, te contactaremos al correo indicado
                    - Guarda el ID del reporte para futuras referencias
                    """)
                    
                    # Limpiar el formulario
                    st.rerun()
                else:
                    st.error(f"‚ùå Error: {resultado.get('message')}")
                    
            except requests.exceptions.RequestException as e:
                st.error(f"‚ùå Error de conexi√≥n: {str(e)}")
            except Exception as e:
                st.error(f"‚ùå Error inesperado: {str(e)}")

st.divider()

# Informaci√≥n adicional
with st.expander("‚ÑπÔ∏è Informaci√≥n sobre Reportes"):
    st.markdown("""
    ### ¬øQu√© tipo de errores puedo reportar?
    
    - **Informaci√≥n Incorrecta**: Datos que no corresponden con la realidad
    - **Dato Faltante**: Informaci√≥n que deber√≠a estar pero no aparece
    - **Error de Sistema**: Problemas t√©cnicos con la aplicaci√≥n
    - **Inconsistencia en Datos**: Datos contradictorios o il√≥gicos
    - **Problema de Visualizaci√≥n**: Gr√°ficos o tablas que no se muestran correctamente
    
    ### ¬øQu√© informaci√≥n debo proporcionar?
    
    - Descripci√≥n clara y detallada del problema
    - Pasos para reproducir el error (si aplica)
    - N√∫mero de radicado si est√° relacionado con un tr√°mite espec√≠fico
    - Cualquier otro detalle relevante
    
    ### ¬øQu√© pasa con mi reporte?
    
    1. Tu reporte es registrado en el sistema
    2. El equipo t√©cnico lo revisa
    3. Se toman las acciones correctivas necesarias
    4. Si es necesario, te contactamos para m√°s informaci√≥n
    
    ### Privacidad
    
    Tus datos personales solo se usan para gestionar tu reporte y no 
    se compartir√°n con terceros.
    """)

# Tips
st.success("""
üí° **Tips para un buen reporte**

- S√© espec√≠fico y detallado
- Incluye ejemplos cuando sea posible
- Proporciona el n√∫mero de radicado si aplica
- Usa un correo v√°lido para que podamos contactarte
""")
